name: CI/CD

on:
  push:
    branches: 
      - main

permissions:
  contents: read

jobs:
  CI-CD:

    runs-on: ubuntu-latest

    steps:
    
    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    ## create application-prod.yml
    - name: make application-prod.yml
      run: |
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.YAML_PROD }}" > ./application-prod.yml

    ## gradle build        
    - name: Build with Gradle
      uses: gradle/gradle-build-action@main
      with:
        arguments: build
        
    ## docker build & push to production
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ secrets.DOCKER_REPO }}:latest
        
    ## deploy to production
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
            sudo docker rm -f $(sudo docker ps -qa -f "status=exited")
            sudo docker pull ${{ secrets.DOCKER_REPO }}
            sudo docker image prune -f
            sudo docker run -d -t \
            --add-host=host.docker.internal:host-gateway \
            -v /home/${{ secrets.SERVER_USERNAME }}/app/item/log:/var/log \
            -v /home/${{ secrets.SERVER_USERNAME }}/app/item/image:/image \
            -p 8080:8080 \
            --name item-manager \
            ${{ secrets.DOCKER_REPO }}
            
  ## discord
  action-discord:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Discord notification
        uses: sarisia/actions-status-discord@v1.12.0
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          status: ${{ job.status }}
        if: always()
